

use-standard-lifecycle

use namespace="System"
use namespace="System.IO"
use import="Files"

var version='0.1.0'
var versionFull='${version}-alpha-5'

var baseDir='${Directory.GetCurrentDirectory()}'
var targetDir='${Path.Combine(baseDir, "target")}'
var testDir='${Path.Combine(targetDir, "test")}'
var packageDir='${Path.Combine(targetDir, "package")}'


#delete-target-folder target="clean"
  test if='Directory.Exists(targetDir)'
    log info='Deleting: ${targetDir}'
    -Directory.Delete(targetDir, true);
  else
    log info='Already absent: ${targetDir}'

#update-assemblyinfo target='initialize'
  assemblyinfo each='var updateFile in Files.Include("src/**/AssemblyInfo.cs")' assemblyVersion='${version}' assemblyInformationalVersion='${versionFull}'

#compile-sake target='compile' description='Compile primary project'
  build projectFile='src/Sake/Sake.csproj' outputDir='${packageDir}'
  copy sourceDir='src/Sake.Library/Shared' outputDir='${packageDir}/Shared' overwrite='${true}'


#compile-for-xunit target='test-compile' description='Compile entire solution for testing'
  build projectFile='Sake.sln' outputDir='${testDir}'


#run-xunit target="test" description='Run xunit tests'
  -//copy sourceDir='${testDir}' include='xunit.dll' outputDir='packages/xunit.runners.1.9.0.1566/tools' overwrite='${true}'
  for each='var file in Files.BasePath(testDir).Include("*.Tests.dll", "Sake.Library.exe")'
    xunit testFile='${Path.Combine(testDir, file)}'


#run-nuget-pack target='package' description='Create NuGet packages'
  for each='var file in Files.Include("target/package/**/*.nuspec")'
    log info='Packaging ${file}'
    nuget-pack nuspecFile='${file}' extra='-NoPackageAnalysis' outputDir='${targetDir}'


#install-nupkgs target='install' description='Copy NuGet packages to local repo'
  var outputDir='${Environment.ExpandEnvironmentVariables("%HOMEDRIVE%%HOMEPATH%\\.nuget")}'
  copy sourceDir='${targetDir}' include='*.nupkg' overwrite='${true}'


#push-nupkgs target='deploy' description='Upload NuGet packages to gallery'
  nuget-push each='var nupkgFile in Files.Include("target/*.nupkg")'



